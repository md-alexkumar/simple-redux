{"version":3,"sources":["services/actionType.js","services/reducer.js","services/store.js","App.js","services/actions.js","reportWebVitals.js","index.js"],"names":["INCREMENT","DECREMENT","INCREMENT_ASYNC","DECREMENT_ASYNC","INITIAL_STATE","count","Counter","state","action","console","log","type","store","createStore","applyMiddleware","thunk","Count","count1","useSelector","dispatch","useDispatch","className","onClick","axios","get","then","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNACaA,EAAY,YACZC,EAAY,YACZC,EAAkB,kBAClBC,EAAkB,kB,uBCGzBC,EAAgB,CAAEC,MAAO,GAgBhBC,MAdf,WAAiD,IAAhCC,EAA+B,uDAAvBH,EAAeI,EAAQ,uCAE9C,OADAC,QAAQC,IAAI,cAAeF,EAAOG,MAC1BH,EAAOG,MACb,KAAKX,EACL,KAAKE,EACH,OAAO,2BAAKK,GAAZ,IAAmBF,MAAOE,EAAMF,MAAQ,IAC1C,KAAKJ,EACL,KAAKE,EACH,OAAO,2BAAKI,GAAZ,IAAmBF,MAAOE,EAAMF,MAAQ,IAC1C,QACE,OAAOE,ICZEK,EADDC,YAAYP,EAASQ,YAAgBC,M,OCCnD,SAASC,IAEP,IAAMC,EAASC,aAAY,SAACX,GAAD,OAAWA,EAAMF,SACtCc,EAAWC,cAGjB,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,2CACA,qBAAKA,UAAU,YAAf,SAA4BJ,IAC5B,wBAAQI,UAAU,UAAUC,QANZ,kBAAMH,GCKU,SAACA,GACrCI,IACGC,IAAI,gDACJC,MAAK,kBAAMN,EAAS,CAAER,KAAMT,OAC5BwB,OAAM,kBAAMP,EAAS,CAAER,KAAMT,WDH5B,uBAGA,wBAAQmB,UAAU,UAAUC,QARZ,kBAAMH,GCUU,SAACA,GACrCI,IACGC,IAAI,gDACJC,MAAK,kBAAMN,EAAS,CAAER,KAAMR,OAC5BuB,OAAM,kBAAMP,EAAS,CAAER,KAAMR,WDN5B,0BAON,IAMewB,EANH,kBACV,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACE,cAACI,EAAD,OEjBWY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c6c6c23.chunk.js","sourcesContent":["// Action Type\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const INCREMENT_ASYNC = \"INCREMENT_ASYNC\";\nexport const DECREMENT_ASYNC = \"DECREMENT_ASYNC\";\n","import {\n  INCREMENT,\n  DECREMENT,\n  INCREMENT_ASYNC,\n  DECREMENT_ASYNC,\n} from \"./actionType\";\n\nconst INITIAL_STATE = { count: 0 };\n// Reducer function\nfunction Counter(state = INITIAL_STATE, action) {\n  console.log(\"action.type\", action.type);\n  switch (action.type) {\n    case INCREMENT:\n    case INCREMENT_ASYNC:\n      return { ...state, count: state.count + 1 };\n    case DECREMENT:\n    case DECREMENT_ASYNC:\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n}\n\nexport default Counter;\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport Counter from \"./reducer\";\n\n// Connect the reducer to craete store\nconst store = createStore(Counter, applyMiddleware(thunk));\nexport default store;\n","import { Provider, useDispatch, useSelector } from \"react-redux\";\n\nimport { doIncrementAsync, doDecrementAsync } from \"./services/actions\";\nimport store from \"./services/store\";\nimport \"./index.css\";\n\n// UI display\nfunction Count() {\n  // Connect the redux state and dispatch function\n  const count1 = useSelector((state) => state.count);\n  const dispatch = useDispatch();\n  const doIncrement = () => dispatch(doIncrementAsync());\n  const doDecrement = () => dispatch(doDecrementAsync());\n  return (\n    <div className=\"App\">\n      <div className=\"App-title\">Using redux for Async actions</div>\n      <div className=\"App-count\">{count1}</div>\n      <button className=\"App-btn\" onClick={doIncrement}>\n        INCREMENT\n      </button>\n      <button className=\"App-btn\" onClick={doDecrement}>\n        DECREMENT\n      </button>\n    </div>\n  );\n}\n\nconst App = () => (\n  <Provider store={store}>\n    <Count />\n  </Provider>\n);\n\nexport default App;\n","import axios from \"axios\";\nimport {\n  INCREMENT,\n  DECREMENT,\n  INCREMENT_ASYNC,\n  DECREMENT_ASYNC,\n} from \"./actionType\";\n\n//Actions creators\n\nexport const doIncrement = () => {\n  console.log(\"return\");\n  return { type: INCREMENT, data: 1 }; // 2nd argument of reducer\n};\nexport const doDecrement = () => ({ type: DECREMENT, payload: 1 });\n\nexport const doIncrementAsync = () => (dispatch) => {\n  axios\n    .get(\"https://jsonplaceholder.typicode.com/todos/1\")\n    .then(() => dispatch({ type: INCREMENT_ASYNC }))\n    .catch(() => dispatch({ type: INCREMENT_ASYNC }));\n};\nexport const doDecrementAsync = () => (dispatch) => {\n  axios\n    .get(\"https://jsonplaceholder.typicode.com/todos/1\")\n    .then(() => dispatch({ type: DECREMENT_ASYNC }))\n    .catch(() => dispatch({ type: DECREMENT_ASYNC }));\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}